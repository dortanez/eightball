{"version":3,"sources":["EightBall.js","App.js","reportWebVitals.js","index.js"],"names":["EightBall","props","useState","message","setMessage","colorr","setColor","green","setGreen","yellow","setYellow","red","setRed","className","style","backgroundColor","onClick","ran","Math","floor","random","answers","length","msg","color","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAGMA,G,MAAY,SAACC,GACf,IADyB,EAaKC,mBAAS,uBAbd,mBAalBC,EAbkB,KAaTC,EAbS,OAeEF,mBAAS,SAfX,mBAelBG,EAfkB,KAeVC,EAfU,OAiBCJ,mBAAS,GAjBV,mBAiBlBK,EAjBkB,KAiBXC,EAjBW,OAkBGN,mBAAS,GAlBZ,mBAkBlBO,EAlBkB,KAkBVC,EAlBU,OAmBHR,mBAAS,GAnBN,mBAmBlBS,EAnBkB,KAmBbC,EAnBa,KA4BzB,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKC,MAAO,CAACC,gBAAiBV,GAAQQ,UAAU,gBAAgBG,QA7BxD,WACZ,IAAMC,EAAMC,KAAKC,MAAMD,KAAKE,SAAWnB,EAAMoB,QAAQC,QACrDlB,EAAWH,EAAMoB,QAAQJ,GAAKM,KAC9BjB,EAASL,EAAMoB,QAAQJ,GAAKO,OACI,UAA7BvB,EAAMoB,QAAQJ,GAAKO,MAClBhB,EAASD,EAAQ,GACkB,cAA7BN,EAAMoB,QAAQJ,GAAKO,MACzBd,EAAUD,EAAS,GAEnBG,EAAOD,EAAM,IAoBb,SACI,oBAAIE,UAAU,iBAAd,SAAgCV,MAEpC,wBAAQa,QAZF,WACVZ,EAAW,uBACXE,EAAS,SACTE,EAAS,GACTE,EAAU,GACVE,EAAO,IAOoBC,UAAU,gBAAjC,mBACA,oBAAGA,UAAU,cAAb,oBAAmCN,KACnC,oBAAGM,UAAU,cAAb,qBAAoCJ,KACpC,oBAAGI,UAAU,cAAb,kBAAiCF,UAK7CX,EAAUyB,aAAe,CACrBJ,QAAS,CACL,CAAEE,IAAK,iBAAkBC,MAAO,SAChC,CAAED,IAAK,sBAAuBC,MAAO,SACrC,CAAED,IAAK,mBAAoBC,MAAO,SAClC,CAAED,IAAK,oBAAqBC,MAAO,SACnC,CAAED,IAAK,sBAAuBC,MAAO,SACrC,CAAED,IAAK,oBAAqBC,MAAO,SACnC,CAAED,IAAK,eAAgBC,MAAO,SAC9B,CAAED,IAAK,gBAAiBC,MAAO,SAC/B,CAAED,IAAK,OAAQC,MAAO,SACtB,CAAED,IAAK,sBAAuBC,MAAO,aACrC,CAAED,IAAK,yBAA0BC,MAAO,aACxC,CAAED,IAAK,mBAAoBC,MAAO,aAClC,CAAED,IAAK,2BAA4BC,MAAO,aAC1C,CAAED,IAAK,sBAAuBC,MAAO,aACrC,CAAED,IAAK,6BAA8BC,MAAO,aAC5C,CAAED,IAAK,qBAAsBC,MAAO,OACpC,CAAED,IAAK,kBAAmBC,MAAO,OACjC,CAAED,IAAK,qBAAsBC,MAAO,OACpC,CAAED,IAAK,uBAAwBC,MAAO,OACtC,CAAED,IAAK,iBAAkBC,MAAO,SAIzBxB,QC1DA0B,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCMSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb029bd3.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './EightBall.css';\n\nconst EightBall = (props) => {\n    const setBall = () => {\n        const ran = Math.floor(Math.random() * props.answers.length);\n        setMessage(props.answers[ran].msg);\n        setColor(props.answers[ran].color);\n        if(props.answers[ran].color === 'green') {\n            setGreen(green + 1);\n        } else if(props.answers[ran].color === 'goldenrod') {\n            setYellow(yellow + 1);\n        } else {\n            setRed(red + 1);\n        }\n    }\n    const [message, setMessage] = useState('Think of a Question');\n\n    const [colorr, setColor] = useState('black');\n\n    const [green, setGreen] = useState(0)\n    const [yellow, setYellow] = useState(0)\n    const [red, setRed] = useState(0)\n\n    const reset = () => {\n        setMessage('Think of a Question');\n        setColor('black');\n        setGreen(0);\n        setYellow(0);\n        setRed(0);\n    }\n    return (\n        <div className='EightBall'>\n            <div style={{backgroundColor: colorr}}className='EightBall-div' onClick={setBall}>\n                <h1 className='EightBall-text'>{message}</h1>\n            </div>\n            <button onClick={reset}className='EightBall-btn'>Reset</button>\n            <p className='EightBall-p'>Green: {green}</p>\n            <p className='EightBall-p'>Yellow: {yellow}</p>\n            <p className='EightBall-p'>Red: {red}</p>\n        </div>\n    )\n}\n\nEightBall.defaultProps = {\n    answers: [\n        { msg: \"It is certain.\", color: \"green\" },\n        { msg: \"It is decidedly so.\", color: \"green\" },\n        { msg: \"Without a doubt.\", color: \"green\" },\n        { msg: \"Yes - definitely.\", color: \"green\" },\n        { msg: \"You may rely on it.\", color: \"green\" },\n        { msg: \"As I see it, yes.\", color: \"green\" },\n        { msg: \"Most likely.\", color: \"green\" },\n        { msg: \"Outlook good.\", color: \"green\" },\n        { msg: \"Yes.\", color: \"green\" },\n        { msg: \"Signs point to yes.\", color: \"goldenrod\" },\n        { msg: \"Reply hazy, try again.\", color: \"goldenrod\" },\n        { msg: \"Ask again later.\", color: \"goldenrod\" },\n        { msg: \"Better not tell you now.\", color: \"goldenrod\" },\n        { msg: \"Cannot predict now.\", color: \"goldenrod\" },\n        { msg: \"Concentrate and ask again.\", color: \"goldenrod\" },\n        { msg: \"Don't count on it.\", color: \"red\" },\n        { msg: \"My reply is no.\", color: \"red\" },\n        { msg: \"My sources say no.\", color: \"red\" },\n        { msg: \"Outlook not so good.\", color: \"red\" },\n        { msg: \"Very doubtful.\", color: \"red\" },\n      ]\n}\n\nexport default EightBall;","import './App.css';\nimport EightBall from './EightBall';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EightBall/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}